$blue: hsl(200, 75%, 65%);

@function fancyColor1($color) {
    $color: scale-color($color, $lightness: calc(-5%));
    @return $color;
}
@function fancyColor2($color, $times) {
    $color: scale-color($color, $lightness: calc(-5% * ($times - 1)));
    @return $color;
}

@function calculateWidth($columns, $margin) {
    $width: calc(100vw / $columns - ($margin - ($margin / $columns)));
    @return $width;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
// @mixin image-grid($columns, $margin: 1%) {
    //     &:nth-child(n) {
//         width:  calc(100% / $columns - ($margin * .9));
//         float: left;
//         height:  calc(100% / $columns - ($margin * .9) * 1.77);
//     }
//     width: calc(100% / $columns - ($margin * .9));
//     &:nth-child(n) {
//         margin: 0 $margin $margin 0;
//     }
//     &:nth-child(#{$columns}n) {
//         margin-right: 0;
//     }
// } 

@mixin box($columns: 1, $math-symbol: '*', $times: 1) {
    background-color: $blue;
    width: calculateWidth($columns, $margin);
    height: calculateWidth($columns, $margin);
}
@mixin image-grid($columns, $margin) {
    // width: calc(100vw / $columns - ($margin - ($margin / $columns)));
    // height: calc(100vw / $columns - ($margin - ($margin / $columns)));
    
    &:nth-child(n) {
        margin: 0 $margin $margin 0;
        float: left;
    }
    &:nth-child(#{$columns}n) {
        margin-right: 0;
        /*margin-bottom:0;*/
    }
}


.blocks {
    height: 100vh;
    
} 

.block {
    max-height: max-content;
}
@for $i from 1 through 9 {
    $blue: fancyColor1($blue);
    .block-#{$i} {
        
        @media screen and (min-width: 800px) {
            @include image-grid(5, 1%);
            @include box(); 
        }
        @media screen and (max-width: 799px) {
            @include image-grid(3, 1%)
        }
    }
}



body {
    background-color: silver;
    min-height: 100vh;
    max-width: 100vw;
}